package currying_play

object illustrate {
  // Higher order functions take other functions as parameters or return values
  // Simplest is the map function
  def map_illus(f: Int => Int, in: List[Int]): List[Int] = {
  	if(in.isEmpty) List()
  	else f(in.head) :: map_illus(f, in.tail)
  }                                               //> map_illus: (f: Int => Int, in: List[Int])List[Int]
}